class Solution:
    def onesMinusZeros(self, grid: List[List[int]]) -> List[List[int]]:
        m, n = len(grid), len(grid[0])

        ones_row = [0] * m
        zeros_row = [0] * m
        ones_col = [0] * n
        zeros_col = [0] * n

        # Calculate ones and zeros counts for each row and column
        for i in range(m):
            for j in range(n):
                ones_row[i] += grid[i][j]
                ones_col[j] += grid[i][j]
                zeros_row[i] += 1 - grid[i][j]
                zeros_col[j] += 1 - grid[i][j]

        # Create the difference matrix
        diff = [[0] * n for _ in range(m)]
        for i in range(m):
            for j in range(n):
                diff[i][j] = ones_row[i] + ones_col[j] - zeros_row[i] - zeros_col[j]

        return diff


